/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2016 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTH_BUILDINGS_COMPILER_H
#define OSGEARTH_BUILDINGS_COMPILER_H

#include "Common"
#include <osg/Array>

namespace osgEarth { namespace Buildings
{
    /**
     * Base class for objects that compile data into OSG geometry.
     * Contains a set of utility functions.
     */
    class OSGEARTHBUILDINGS_EXPORT Compiler : public osg::Referenced
    {
    protected:
        Compiler() { }
        virtual ~Compiler() { }

    public:
        /** Adds geometry for a box (with no bottom), including (0,0,0) texcoords */
        void addCappedBox(
            const osg::Vec3f& LL,
            const osg::Vec3f& UR,
            osg::Vec3Array*   verts,
            osg::Vec3Array*   texCoords) const;

        /** Computes normals for verts and pushes them onto normals, by doing a 
            simple cross product for each consecutive triangle. */
        void generateNormals(
            const osg::Vec3Array* verts,
            osg::Vec3Array*       normals) const;
    };
} }

#endif // OSGEARTH_BUILDINGS_COMPILER_H
